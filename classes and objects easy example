/******************************************************************************

------------------------Procedural Oriented Programming------------------
List of instructions for a computer to follow
group of similar tasks are organised as functions 
most functions are shared global data
data is publicly available
----------------------------------------------------------------------------
OOP

emphasis on data rather than the procedure
programs are divided in to objects
data structures are designed such that they characterize the objects
functions that operate on the data of an object are tied together in that same data structures
data is hidden and can't be directly accessed 


OOP is an approach that provides a way of modularizing programs by creating partitioned memory area 
for both the data and the fuctions that can be used as a template (class) for creating copies of such 
modules on demand

*******************************************************************************/
#include <iostream>
#include <string>// include for string class 



using namespace std;


class Cars{
    
    // all the below values in this class are private
    private://  this is the access specifier 
    //the below strings, ints are called member variables or data members
    string company_name;
    string model_name;
    string fuel_type;
    float mileage;
    double price;
    
    public:
    //these fuctions are called member fuctions
        void setData(string cname, string mname, string ftype, float m, double p){
            company_name=cname;
            model_name=mname;
            fuel_type=ftype;
            mileage=m;
            price=p;
            
        }
        
        void displayData(){
            
            cout <<" Displaying Car Properties "<<endl<<endl;
            cout <<"Car Company Name - "<<company_name<<endl;
            cout <<"Car Model Name - "<< model_name << endl;
            cout <<"fuel_type - "<<fuel_type<<endl;
            cout <<"mileage - "<<mileage<<endl;
            cout <<"car Price - "<<price <<endl;
        }
    
};


int main()
{
    Cars car1;//objects are nothing but variables of type Cars
    car1.setData("toyota", "pruis", "petrol", 15.5 , 20000);
    car1.displayData();
    

    return 0;
}
